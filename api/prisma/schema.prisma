// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model user {
    id       Int  @id @default(autoincrement())
    intra_id Int?

    username           String?  @unique
    email              String   @unique
    intra_url          String?
    first_name         String?
    last_name          String?
    avatar_url         String?
    cover_url          String?
    isTwoFactorEnabled Boolean? @default(false)
    TwoFactorSecret    String?

    rooms room[]

    created_at DateTime @default(now())
    updated_at DateTime @updatedAt

    room_user_rel room_user_rel[]
    messages      messages[]
    blacklist     blacklist[]     @relation("userLink")
    userLink2     blacklist[]     @relation("userLink2")
    friends       friends[]       @relation("userLink")
    friends2      friends[]       @relation("userLink2")

    @@map("users")
}

model room {
    id Int @id @default(autoincrement())

    userLink1 user @relation(fields: [owner_id], references: [id])
    owner_id  Int

    room_type    room_type @relation(fields: [room_type_id], references: [id])
    room_type_id Int

    count_messages Int? @default(0)

    created_at DateTime @default(now())
    updated_at DateTime @updatedAt

    room_user_rel room_user_rel[]
    messages      messages[]
}

model room_type {
    id Int @id @default(autoincrement())

    type       String
    created_at DateTime @default(now())
    updated_at DateTime @updatedAt
    room       room[]
}

model room_user_rel {
    id Int @id @default(autoincrement())

    roomLink room @relation(fields: [room_id], references: [id])
    room_id  Int

    userLink user @relation(fields: [user_id], references: [id])
    user_id  Int

    unread_message_count Int @default(0)

    created_at DateTime @default(now())
    updated_at DateTime @updatedAt
}

model messages {
    id Int @id @default(autoincrement())

    userLink user @relation(fields: [user_id], references: [id])
    user_id  Int

    roomLink room @relation(fields: [room_id], references: [id])
    room_id  Int

    message String

    is_read Boolean @default(false)

    created_at DateTime @default(now())
    updated_at DateTime @updatedAt
}

model blacklist {
    id Int @id @default(autoincrement())

    userLink user @relation("userLink", fields: [user_id], references: [id])
    user_id  Int

    userLink2       user @relation("userLink2", fields: [blocked_user_id], references: [id])
    blocked_user_id Int

    created_at DateTime @default(now())
    updated_at DateTime @updatedAt
}

model friends {
    id Int @id @default(autoincrement())

    userLink  user @relation("userLink", fields: [user_id_1], references: [id])
    user_id_1 Int

    userLink2 user @relation("userLink2", fields: [user_id_2], references: [id])
    user_id_2 Int

    created_at DateTime @default(now())
    updated_at DateTime @updatedAt
}
